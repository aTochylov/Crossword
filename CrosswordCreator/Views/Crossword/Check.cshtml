@model CheckViewModel
<div class="text-center">
    <div class="container-fluid">
        <div class="row">
            <div class="card mt-3">
                <div class="card-body w-100 m-auto flex-column">
                    <table class="table-borderless m-auto">
                        <thead>
                            <tr>
                                <th scope="col" width="20px">#</th>
                                <th scope="col" width="60%">Question</th>
                                <th scope="col" width="60%">Answer</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var q in Model.Words)
                            {
                                <tr>
                                    <th scope="row"></th>
                                    <td class="w-100 px-3" align="left">@q.Value.Text</td>
                                    <td class="w-100">@q.Key.Word</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card mt-3">
                <div class="card-body m-auto" style="overflow: auto;">
                    <table class="table-bordered m-auto" id="Crossword">
                        <tbody>
                            @if (Model != null)
                                @for (int i = 0; i < Model.CorrectCrossword.GetLength(0); i++)
                                {
                                    <tr>
                                        @for (int j = 0; j < Model.CorrectCrossword[i].Length; j++)
                                        {
                                            @if (!Model.CorrectCrossword[i][j].Equals('#') && Model.Words.Any(kv => kv.Key.WordStartCol == i && kv.Key.WordStartRow == j))
                                            {
                                                var words = Model.Words.Where(kv => kv.Key.WordStartCol == i && kv.Key.WordStartRow == j).ToList();
                                                @if (Model.CorrectCrossword[i][j].Equals(Model.SolvedCrossword[i][j]))
                                                {
                                                    <td style="background-color: lightgreen;">
                                                        @if (words.Count() == 2)
                                                        {
                                                            <sup class="supLeft">@(Model.Words.IndexOf(words[1]) + 1)</sup>
                                                            @Model.CorrectCrossword[i][j]
                                                            <sup class="supRight">@(Model.Words.IndexOf(words[0]) + 1)</sup>
                                                        }
                                                        else
                                                        {
                                                            <sup class="supLeft">@(Model.Words.IndexOf(words[0]) + 1)</sup>
                                                            @Model.CorrectCrossword[i][j]
                                                        }
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td style="background-color: palevioletred;">
                                                        @if (words.Count() == 2)
                                                        {
                                                            <sup class="supLeft">@(Model.Words.IndexOf(words[1]) + 1)</sup>
                                                            @Model.SolvedCrossword[i][j]
                                                            <sup class="supRight">@(Model.Words.IndexOf(words[0]) + 1)</sup>
                                                        }
                                                        else
                                                        {
                                                            <sup class="supLeft">@(Model.Words.IndexOf(words[0]) + 1)</sup>
                                                            @Model.SolvedCrossword[i][j]
                                                        }
                                                    </td>
                                                }
                                            }
                                            else if (!Model.CorrectCrossword[i][j].Equals('#'))
                                            {
                                                @if (Model.CorrectCrossword[i][j].Equals(Model.SolvedCrossword[i][j]))
                                                {
                                                    <td style="background-color: lightgreen;">@Model.CorrectCrossword[i][j]</td>
                                                }
                                                else
                                                {
                                                    <td style="background-color: palevioletred;">@Model.SolvedCrossword[i][j]</td>
                                                }
                                            }
                                            else
                                            {
                                                <td style="background-color:aqua"></td>
                                            }
                                        }
                                    </tr>
                                }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>